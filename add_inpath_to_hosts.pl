#!/usr/bin/perl

#Test whether every IP in a HOSTS file lies within any INPATH interface subnet in a second filel
#
# Usage:
#To do: use command line variables instead of hardcoded file names
#		ignore comments in input files
#		ignore 0.0.0.0 addresses in input inpath file
#		ignore address if it's exactly the same (not just in the same subnet)
#
#Pseudocode:
#For each IP in HOST file
#	For each INPATH entry in inpath listl
#		IS IP in INPATH subnet
#			Yes, add INPATH to existing description
#			No, next INPATH entry
use warnings;
use strict;
use autodie;

use NetAddr::IP;
use Getopt::Std;

use vars qw/ %opt /;

my $opt_string = 'h:i:';

my $arg_num = scalar @ARGV;
if ( $arg_num != 2 ) {
    die "Usage: $0 -h <hostsfile> -i <inpaths_file>\n";
}

getopts( "$opt_string", \%opt )
  or die "Usage: $0 -h <hostsfile> -i <inpaths_file>\n";

#my $HostFile = './hosts.txt';
#my $InpathFile = './inpaths.txt';

open( my $fh1, '<:encoding(UTF-8)', $opt{h} )
  or die "Could not open hosts file '$opt{h}' $!";

open( my $fh2, '<:encoding(UTF-8)', $opt{i} )
  or die "Could not open inpath file '$opt{i}' $!";

#Read in entire hosts file to array
my @hosts = <$fh1>;

#Read in entire file of inpath interfaces to array
#This has to be previously generated by INPATH-interfaces-and-subnets-from-STEELHEAD.pl
#Format: 10.80.242.53/29	ATWTAI-OFFCW01-inpath0_0
my @inpaths = <$fh2>;

#Iterate over each item/line in the hosts array
foreach (@hosts) {

    #Skip lines that contain "#" which are comments in the hosts file
    next if ( $_ =~ /#/ );

    #skip entries for inpath interfaces
    next if ( $_ =~ /-inpath\d_\d/i );

    #Split the line into fields based on whitespace
    my @hostfields = split /\s+/, $_;

    #Host IP address is field 0
    my $HostIPAddress = NetAddr::IP->new("$hostfields[0]");

    #Iterate over each item/line in the inpaths array
    foreach (@inpaths) {

        #split the line into whitespace separated fields
        my @inpathfields = split /\s+/, $_;

        #element zero in the line is address/netmask of an inpath interface
        my $InpathIPAddress = NetAddr::IP->new("$inpathfields[0]");

        #skip if this exact IP address is already in the host file
        next if ( $HostIPAddress->addr() eq $InpathIPAddress->addr() );

       #If host IP is within the subnet of the inpath interface print out a line
        if ( $HostIPAddress->within($InpathIPAddress) ) {

#print "NetAddr::IP->addr($HostIPAddress) eq NetAddr::IP->addr($InpathIPAddress)\n";
            print "$hostfields[0]\t$hostfields[1]-$inpathfields[1]\n";
        }
    }
}

